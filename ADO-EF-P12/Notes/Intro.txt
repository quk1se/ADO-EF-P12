EF - Entity Framework. Вступ.
EF - фреймворк для спрощення роботи з БД. Головна ідея - перенесення
роботи з БД повністю на мову програмування (приховування SQL),
уніфікація - створення одинакових засобів для роботи з різними СУБД
Базується на ADO, не має замінників засобів доступу до даних.
"+" універсальність, одна мова (не треба вчити SQL)
"-" важкість, відсутність "фіч" SQL

Встановлення
Необхідно додати декілька NuGet пакетів:
- Microsoft.EntityFrameworkCore - ядро фреймворка, основні засоби
- Microsoft.EntityFrameworkCore.SqlServer - драйвер (провайдер) для MS SQL Server
- Microsoft.EntityFrameworkCore.Tools - засоби командної консолі

EF може працювати у різних режимах
- Data first - БД вже існує, необхідно складати код для роботи з нею
- Code first - БД немає, розробка тільки починається

У режимі Code first проєктування починається з опису класів-сутностей
У папці Data/Entity описуємо всі класи, що нам потрібні у проєкті
У папці Data описуємо клас-контекст, спадковуємо його від DbContext (Microsoft.EntityFrameworkCore)
У контексті для кожної сутності описуємо
        public DbSet<Entity.Department> Departments { get; set; }
        public DbSet<Entity.Manager> Managers { get; set; }
    та делегуємо конструктор
    та налаштовуємо підключення у перевантаженому методі OnConfiguring

Міграції - переведені на уніфіковану мову інструкції для БД.
Можна провести аналогію з комітами Гіт: кожні зміни у БД відображаються у міграції,
що дозволяє повертатись до попередніх станів або відновлювати їх у іншій БД.
Для створення міграції включаємо РМ консоль: Tools - NuGet - PM Console
PM> Add-Migration Initial
з'являється 
 папка Migrations
 файли міграції у ній

Застовування міграції (до БД)
PM> Update-Database

Підключаємось до БД - з рядка підключення копіюємо назву сервера
(LocalDB)\MSSQLLocalDB
меню Tools - Connect to DB
 провайдер - Microsoft SQL Server (SqlClient)
 сервер - (LocalDB)\MSSQLLocalDB
 бд - як у рядку підключення: ado-ef-p12
